class Solution:
    def twoCitySchedCost(self, costs: List[List[int]]) -> int:
        n = len(costs)
        costs.sort(key = lambda x : x[1]-x[0])
        sumCosts = 0
        for i in range(n):
            if i < n//2: #此处的边界条件如何确定，< 还是 <=，一共有n个人，一半是n/2个人，下标从0开始，所以应该小于
                sumCosts = sumCosts + costs[i][1] 
            else:
                sumCosts = sumCosts + costs[i][0] 
        return sumCosts


'''
执行用时 :
76 ms, 在所有 Python3 提交中击败了18.77%的用户
内存消耗 :13 MB, 在所有 Python3 提交中击败了100.00%的用户

因为有一个排序，后面再求和，速度慢了

'''
